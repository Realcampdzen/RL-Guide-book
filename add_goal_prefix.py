#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import json
import os
import glob

def add_goal_prefix_to_descriptions():
    """–î–æ–±–∞–≤–ª—è–µ—Ç '–¶–µ–ª—å: ' –≤ –Ω–∞—á–∞–ª–æ –≤—Å–µ—Ö –æ–ø–∏—Å–∞–Ω–∏–π –≤ ai-data —Ñ–∞–π–ª–∞—Ö"""
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ ai-data
    ai_data_files = glob.glob("ai-data/**/*.json", recursive=True)
    
    updated_count = 0
    
    for file_path in ai_data_files:
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ description
            if 'description' in data and data['description']:
                description = data['description'].strip()
                
                # –ï—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "–¶–µ–ª—å:", –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
                if not description.startswith('–¶–µ–ª—å:'):
                    data['description'] = f"–¶–µ–ª—å: {description}"
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    with open(file_path, 'w', encoding='utf-8') as f:
                        json.dump(data, f, ensure_ascii=False, indent=2)
                    
                    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: {file_path}")
                    updated_count += 1
                else:
                    print(f"‚è≠Ô∏è  –£–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '–¶–µ–ª—å:': {file_path}")
            else:
                print(f"‚ö†Ô∏è  –ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è: {file_path}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ {file_path}: {e}")
    
    print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Ñ–∞–π–ª–æ–≤")
    return updated_count

if __name__ == "__main__":
    print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º '–¶–µ–ª—å:' –≤ –Ω–∞—á–∞–ª–æ –≤—Å–µ—Ö –æ–ø–∏—Å–∞–Ω–∏–π...")
    add_goal_prefix_to_descriptions()
