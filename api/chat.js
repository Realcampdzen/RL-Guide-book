// API endpoint –¥–ª—è —á–∞—Ç-–±–æ—Ç–∞ –ù–µ–π—Ä–æ–í–∞–ª—é—à–∏
import { dataLoader } from '../data_loader.js';
import { contextManager } from '../context_manager.js';
import { responseGenerator } from '../response_generator.js';

export default async function handler(req, res) {
  // –í–∫–ª—é—á–∞–µ–º CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method === 'POST') {
    try {
      const { message, user_id = 'web_user', context } = req.body;
      
      if (!message) {
        res.status(400).json({ error: "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º" });
        return;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ–±-–∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
      if (context) {
        console.log(`üåê –ü–æ–ª—É—á–µ–Ω –≤–µ–±-–∫–æ–Ω—Ç–µ–∫—Å—Ç:`, JSON.stringify(context, null, 2));
        contextManager.updateWebContext(user_id, context);
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const conversationHistory = contextManager.getConversationHistory(user_id);
      console.log(`üí¨ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ (${conversationHistory.length} —Å–æ–æ–±—â–µ–Ω–∏–π):`, JSON.stringify(conversationHistory.slice(-3), null, 2));
      
      // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      const userContext = contextManager.getUserContext(user_id);
      console.log(`üë§ –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:`, JSON.stringify(userContext, null, 2));
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
      contextManager.addMessageToHistory(user_id, {
        role: "user",
        content: message,
        metadata: {}
      });
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
      const response = await responseGenerator.generateResponse(
        message,
        user_id,
        conversationHistory
      );
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
      contextManager.addMessageToHistory(user_id, {
        role: "assistant",
        content: response.response,
        metadata: response.metadata
      });
      
      res.status(200).json(response);

    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ AI:", error);
      
      // Fallback –æ—Ç–≤–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ AI
      const { message } = req.body;
      res.status(200).json({
        response: `–ü—Ä–∏–≤–µ—Ç! üëã –Ø –ù–µ–π—Ä–æ–í–∞–ª—é—à–∞, —Ü–∏—Ñ—Ä–æ–≤–∞—è –≤–æ–∂–∞—Ç–∞—è "–†–µ–∞–ª—å–Ω–æ–≥–æ –õ–∞–≥–µ—Ä—è"! 

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –º–µ–Ω—è —Å–µ–π—á–∞—Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ —è –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–∏—Å—Ç–µ–º–µ –∑–Ω–∞—á–∫–æ–≤:

üèÜ –í "–†–µ–∞–ª—å–Ω–æ–º –õ–∞–≥–µ—Ä–µ" –µ—Å—Ç—å 14 –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–Ω–∞—á–∫–æ–≤ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–∞–∑–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤:
- üí™ –ó–∞ –ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
- üåü –ó–∞ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –¥–µ–ª–∞  
- üì± –ú–µ–¥–∏–∞ –∑–Ω–∞—á–∫–∏
- üèïÔ∏è –ó–∞ –ª–∞–≥–µ—Ä–Ω—ã–µ –¥–µ–ª–∞
- üë• –ó–∞ –æ—Ç—Ä—è–¥–Ω—ã–µ –¥–µ–ª–∞
- üéØ –ì–∞—Ä–º–æ–Ω–∏—è –∏ –ø–æ—Ä—è–¥–æ–∫
- üé® –ó–∞ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
- üöÄ –ó–Ω–∞—á–∫–∏ –î–≤–∏–∂–∫–æ–≤
- üí™ –ó–Ω–∞—á–∫–∏ –ë—Ä–æ ‚Äì –î–≤–∏–∂–µ–Ω–∏—è
- üè¥ –ó–Ω–∞—á–∫–∏ –Ω–∞ —Ñ–ª–∞–≥ –æ—Ç—Ä—è–¥–∞
- üßò –†–µ–∞–ª—å–Ω–æ—Å—Ç—å: –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- ü§ñ –ò–ò: –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞
- üíº –°–æ—Ñ—Ç-—Å–∫–∏–ª–ª–∑ –∏–Ω—Ç–µ–Ω—Å–∏–≤
- üîç –ó–Ω–∞—á–∫–∏ –ò–Ω—Å–ø–µ–∫—Ç–æ—Ä–∞ –ü–æ–ª—å–∑—ã

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–∑–∂–µ! üòä`,
        metadata: { source: "fallback", error: error.message }
      });
    }
  } else {
    res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è" });
  }
}
