# PRD: Полная диагностика и улучшение Vercel Backend для НейроВалюши

## Проблема
Vercel backend работает значительно хуже локального FastAPI сервера. Несмотря на долгую разработку, бот в Vercel backend "тупой" и не использует системный промпт и данные из ai-data/ эффективно.

## Цель
Довести Vercel backend до 100% уровня качества локального FastAPI сервера, чтобы оба бота работали одинаково хорошо.

## Задачи диагностики

### 1. Архитектурный анализ
- Сравнить архитектуру Vercel backend vs FastAPI
- Проанализировать логику ответов в обеих системах
- Выявить ключевые различия в обработке запросов
- Определить, почему Vercel backend не использует системный промпт эффективно

### 2. Анализ системы данных
- Изучить, как FastAPI получает и использует данные из ai-data/
- Проанализировать, как Vercel backend работает с JSON файлами
- Выявить проблемы в интеграции с данными Путеводителя
- Определить, почему архитектура JSON не работает эффективно в Vercel

### 3. Анализ системного промпта
- Сравнить использование системного промпта в обеих системах
- Выявить различия в обработке контекста экрана
- Проанализировать интеграцию с putevoditel_system_prompt_optimized.py
- Определить проблемы в понимании контекста пользователя

### 4. Техническая диагностика
- Проанализировать различия в API endpoints
- Изучить различия в обработке запросов
- Выявить проблемы в интеграции с OpenAI API
- Определить различия в логике генерации ответов

## План улучшения

### Фаза 1: Диагностика (1-2 дня)
- Полный анализ архитектуры обеих систем
- Создание детального отчета о различиях
- Выявление критических проблем

### Фаза 2: Синхронизация системного промпта (1 день)
- Копирование полного системного промпта из FastAPI
- Обновление Vercel backend для использования оптимизированного промпта
- Тестирование изменений

### Фаза 3: Улучшение системы данных (2-3 дня)
- Интеграция эффективной работы с ai-data/
- Улучшение обработки JSON файлов
- Добавление RAG системы или аналога

### Фаза 4: Улучшение логики ответов (2-3 дня)
- Копирование продвинутой логики из FastAPI
- Добавление системы контекста экрана
- Улучшение обработки различных типов запросов

### Фаза 5: Тестирование и оптимизация (1-2 дня)
- Полное тестирование улучшенного Vercel backend
- Сравнение качества ответов с FastAPI
- Финальная оптимизация

## Ожидаемые результаты
- Vercel backend работает на 100% уровне FastAPI
- Полное использование системного промпта
- Эффективная работа с данными из ai-data/
- Понимание контекста экрана пользователя
- Качественные ответы на все типы запросов

## Критерии успеха
- Ответы Vercel backend не отличаются от FastAPI
- Использование полного системного промпта
- Эффективная работа с данными Путеводителя
- Понимание контекста пользователя
- Высокое качество ответов на все вопросы
