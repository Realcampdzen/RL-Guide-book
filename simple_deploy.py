#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ GitHub Pages
–ë–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
"""

import os
import shutil
import json
from pathlib import Path

def prepare_backend():
    """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –¥–µ–ø–ª–æ—è"""
    print("üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–µ–Ω–¥–∞ –≤ dist
    dist_dir = Path("dist")
    backend_dir = dist_dir / "api"
    backend_dir.mkdir(exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –±—ç–∫–µ–Ω–¥–∞
    backend_files = [
        "backend/app.py",
        "backend/requirements.txt",
        "perfect_parsed_data.json"
    ]
    
    for file_path in backend_files:
        if os.path.exists(file_path):
            dest_path = backend_dir / Path(file_path).name
            shutil.copy2(file_path, dest_path)
            print(f"üìÅ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {file_path} -> {dest_path}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ —á–∞—Ç-–±–æ—Ç–∞
    chatbot_src = Path("chatbot")
    chatbot_dest = backend_dir / "chatbot"
    
    if chatbot_src.exists():
        shutil.copytree(chatbot_src, chatbot_dest, dirs_exist_ok=True)
        print(f"ü§ñ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —á–∞—Ç-–±–æ—Ç: {chatbot_src} -> {chatbot_dest}")
    
    print("‚úÖ –ë—ç–∫–µ–Ω–¥ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω!")

def create_github_workflow():
    """–°–æ–∑–¥–∞–Ω–∏–µ GitHub Actions workflow –¥–ª—è –¥–µ–ø–ª–æ—è"""
    workflow_dir = Path(".github/workflows")
    workflow_dir.mkdir(parents=True, exist_ok=True)
    
    workflow_content = """name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build frontend
      run: npm run build
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
"""
    
    workflow_path = workflow_dir / "deploy.yml"
    with open(workflow_path, 'w', encoding='utf-8') as f:
        f.write(workflow_content)
    
    print(f"üöÄ –°–æ–∑–¥–∞–Ω GitHub Actions workflow: {workflow_path}")

def create_deployment_instructions():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –¥–µ–ø–ª–æ—é"""
    instructions = """# üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–µ–ø–ª–æ—é –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è –Ω–∞ GitHub Pages

## ‚úÖ –ß—Ç–æ —É–∂–µ –≥–æ—Ç–æ–≤–æ

1. **–ß–∞—Ç-–±–æ—Ç –ù–µ–π—Ä–æ–í–∞–ª—é—à–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ Flask API** - –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π FastAPI —Å–µ—Ä–≤–µ—Ä
2. **–í—Å–µ –º–æ–¥—É–ª–∏ —á–∞—Ç-–±–æ—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã** –≤ –ø–∞–ø–∫—É `dist/api/chatbot/`
3. **GitHub Actions workflow —Å–æ–∑–¥–∞–Ω** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –ø—Ä–∏ –ø—É—à–µ –≤ main
4. **CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω** –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GitHub Pages

## üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)

### –®–∞–≥ 1: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
```bash
# –î–æ–±–∞–≤—å—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –≤ git
git add .
git commit -m "–î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–µ–ø–ª–æ—è –Ω–∞ GitHub Pages —Å —á–∞—Ç-–±–æ—Ç–æ–º"
git push origin main
```

### –®–∞–≥ 2: –í–∫–ª—é—á–µ–Ω–∏–µ GitHub Pages
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ **Settings** ‚Üí **Pages**
2. **Source**: GitHub Actions
3. Workflow –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç—Å—è –∏–∑ `.github/workflows/deploy.yml`

### –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–ª—è —á–∞—Ç-–±–æ—Ç–∞)
1. **Settings** ‚Üí **Secrets and variables** ‚Üí **Actions**
2. –î–æ–±–∞–≤—å—Ç–µ `OPENAI_API_KEY` —Å –≤–∞—à–∏–º API –∫–ª—é—á–æ–º OpenAI

## üîß –†—É—á–Ω–æ–π –¥–µ–ø–ª–æ–π

–ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:

### –í–∞—Ä–∏–∞–Ω—Ç 1: –ß–µ—Ä–µ–∑ GitHub CLI
```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GitHub CLI
# –ó–∞—Ç–µ–º:
gh repo deploy --source=dist --target=gh-pages
```

### –í–∞—Ä–∏–∞–Ω—Ç 2: –ß–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
1. –°–æ–±–µ—Ä–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: `npm run build`
2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ `dist` –≤ –≤–µ—Ç–∫—É `gh-pages`

## ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Ç-–±–æ—Ç–∞

### –õ–æ–∫–∞–ª—å–Ω–æ
–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:
```
OPENAI_API_KEY=your_api_key_here
```

### –ù–∞ GitHub Pages
–î–æ–±–∞–≤—å—Ç–µ `OPENAI_API_KEY` –≤ Secrets —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

## üîó –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

### Vercel
```bash
npm i -g vercel
vercel --prod
```

### Netlify
```bash
npm i -g netlify-cli
netlify deploy --prod
```

## üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ—è

–ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:

1. **–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞**: `https://yourusername.github.io/RL-Guide-book/`
2. **API –∫–∞—Ç–µ–≥–æ—Ä–∏–∏**: `https://yourusername.github.io/RL-Guide-book/api/categories`
3. **–ß–∞—Ç-–±–æ—Ç**: –û—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
4. **Health check**: `https://yourusername.github.io/RL-Guide-book/api/health`

## üêõ –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

### –ß–∞—Ç-–±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
- ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ `OPENAI_API_KEY` –≤ Secrets
- ‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∫–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
- ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞

### API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
- ‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Flask API –∑–∞–ø—É—â–µ–Ω
- ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
- ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –¥–∞–Ω–Ω—ã—Ö

### –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
- ‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ `public/` —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã
- ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–µ–π –≤ –∫–æ–¥–µ

## üéâ –ì–æ—Ç–æ–≤–æ!

–í–∞—à –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å "–†–µ–∞–ª—å–Ω—ã–π –õ–∞–≥–µ—Ä—å" —Å —á–∞—Ç-–±–æ—Ç–æ–º –ù–µ–π—Ä–æ–í–∞–ª—é—à–µ–π –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!

**–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
- ü§ñ –ß–∞—Ç-–±–æ—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ Flask API
- üåê –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ GitHub Pages
- üì± –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω
- üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π
- üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å API –∫–ª—é—á–∞–º–∏
"""
    
    with open("DEPLOYMENT_GUIDE.md", 'w', encoding='utf-8') as f:
        f.write(instructions)
    
    print("üìñ –°–æ–∑–¥–∞–Ω–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –¥–µ–ø–ª–æ—é: DEPLOYMENT_GUIDE.md")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –¥–µ–ø–ª–æ—é"""
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é –ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è –Ω–∞ GitHub Pages...")
    
    try:
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞
        prepare_backend()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ GitHub Actions workflow
        create_github_workflow()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
        create_deployment_instructions()
        
        print("\n‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ npm (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã)")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm install && npm run build")
        print("3. –ó–∞–ø—É—à—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        print("4. GitHub Actions –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç –ø—Ä–æ–µ–∫—Ç")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞ https://yourusername.github.io/RL-Guide-book/")
        print("\nü§ñ –ß–∞—Ç-–±–æ—Ç –ù–µ–π—Ä–æ–í–∞–ª—é—à–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π API!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –¥–µ–ø–ª–æ—é: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())
