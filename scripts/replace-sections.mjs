import { readFileSync, writeFileSync } from 'fs';
import { resolve } from 'path';

const file = resolve(process.cwd(), 'src/App.tsx');
let s = readFileSync(file, 'utf8');

// Replace renderIntroduction with clean Russian texts
const introPattern = /const\s+renderIntroduction\s*=\s*\(\)\s*=>\s*\{[\s\S]*?\n\s*\};/m;
const introReplacement = `const renderIntroduction = () => {
    if (!selectedCategory?.introduction?.has_introduction) return null;
    const cleanedHtml = cleanHtmlContent(selectedCategory.introduction.html);
    return (
      <div className="introduction-screen">
        <div className="header">
          <button onClick={handleBackToCategoryFromIntroduction} className="back-button">
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          </button>
          <h1 className="app-title">üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: {selectedCategory.title}</h1>
        </div>
        <div className="introduction-content">
          <div 
            className="introduction-text"
            dangerouslySetInnerHTML={{ __html: cleanedHtml }}
          />
        </div>
      </div>
    );
  };`;
console.log('introPattern match:', introPattern.test(s));
if (introPattern.test(s)) s = s.replace(introPattern, introReplacement);

// Replace renderAboutCamp with clean Russian texts
const aboutPattern = /const\s+renderAboutCamp\s*=\s*\(\)\s*=>\s*\([\s\S]*?\n\s*\);/m;
const aboutReplacement = `const renderAboutCamp = () => (
    <div className="about-camp-screen">
      <div className="header">
        <button onClick={handleBackToIntro} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥ –∫ –≤–≤–µ–¥–µ–Ω–∏—é
        </button>
        <h1 className="app-title">–û –ª–∞–≥–µ—Ä–µ</h1>
      </div>
      <div className="about-camp-content">
        <div className="camp-description">
          <h2>–†–µ–∞–ª—å–Ω—ã–π –ª–∞–≥–µ—Ä—å ‚Äî —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è —Ä–æ—Å—Ç–∞!</h2>
          <p>
            –£ –Ω–∞—Å —Ä–µ–±—è—Ç–∞ –ø—Ä–æ–±—É—é—Ç –Ω–æ–≤–æ–µ –∏ —Ä–∞—Å—Ç—É—Ç, —Å–æ–∑–¥–∞—é—Ç —Å–≤–æ–π –ª–∞–≥–µ—Ä—å –≤–º–µ—Å—Ç–µ —Å–æ –≤–∑—Ä–æ—Å–ª—ã–º–∏ ‚Äî 
            <strong>–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, –∫–æ–º–∞–Ω–¥–∞ –∏ –≤–∫–ª–∞–¥ –≤ –æ–±—â–µ–µ –¥–µ–ª–æ.</strong>
          </p>
          <p>
            <strong>7 –¥–Ω–µ–π –≤ —Å–º–µ–Ω–µ</strong> ‚Äî —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—è–≤–∏—Ç—å —Å–µ–±—è –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª—è—Ö, 
            –Ω–∞–π—Ç–∏ –¥–µ–ª–æ –ø–æ –¥—É—à–µ –∏ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.
          </p>

          <h3>–ß—Ç–æ –≤–∞—Å –∂–¥—ë—Ç</h3>
          <div className="benefits-grid">
            <div className="benefit-item clickable" style={{
              background:
                'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("/skills_4k.png") center/cover no-repeat',
              cursor: 'pointer'
            }} onClick={() => {
              const category = categories.find(c => c.id === '13');
              if (category) handleCategoryClick(category);
            }}>
              <h4 style={{ color: '#FFD700', textShadow: '2px 2px 4px rgba(0,0,0,0.8)', fontWeight: 'bold' }}>–ù–∞–≤—ã–∫–∏ 4K</h4>
              <p style={{ color: '#fff', fontWeight: '600', textShadow: '1px 1px 2px rgba(0,0,0,0.8)' }}>
                üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ<br/>
                ü§ù –ö–æ–º–∞–Ω–¥–Ω–æ—Å—Ç—å<br/>
                üß† –ú—ã—à–ª–µ–Ω–∏–µ<br/>
                üí° –ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞
              </p>
            </div>

            <div className="benefit-item clickable" style={{
              background:
                'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("/ai_camp.png") center/cover no-repeat',
              cursor: 'pointer'
            }} onClick={() => {
              const category = categories.find(c => c.id === '12');
              if (category) handleCategoryClick(category);
            }}>
              <h4 style={{ color: '#FFD700', textShadow: '2px 2px 4px rgba(0,0,0,0.8)', fontWeight: 'bold' }}>–ò–ò‚Äë—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ ‚Äî —É—á—ë–±–∞ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ</h4>
              <p style={{ color: '#fff', fontWeight: '600', textShadow: '1px 1px 2px rgba(0,0,0,0.8)' }}>
                –ü—Ä–æ–µ–∫—Ç—ã, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ —É—á—ë–±–∞ —Å –ò–ò: –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∏–¥–µ–∏, —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤.
              </p>
            </div>

            <div className="benefit-item clickable" style={{
              background:
                'linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("/co_management.png") center/cover no-repeat',
              cursor: 'pointer'
            }} onClick={() => {
              const category = categories.find(c => c.id === '9');
              if (category) handleCategoryClick(category);
            }}>
              <h4 style={{ color: '#FFD700', textShadow: '2px 2px 4px rgba(0,0,0,0.8)', fontWeight: 'bold' }}>–°–æ–≤–º–µ—Å—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –¥–µ–ª–∞</h4>
              <p style={{ color: '#fff', fontWeight: '600', textShadow: '1px 1px 2px rgba(0,0,0,0.8)' }}>
                –£—á–∏–º—Å—è –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è, –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –¥–µ–ª–∞—Ç—å –¥–æ–±—Ä–æ –≤–º–µ—Å—Ç–µ ‚Äî –¥–ª—è –æ—Ç—Ä—è–¥–∞ –∏ –ª–∞–≥–µ—Ä—è.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );`;
console.log('aboutPattern match:', aboutPattern.test(s));
if (aboutPattern.test(s)) s = s.replace(aboutPattern, aboutReplacement);

writeFileSync(file, s, 'utf8');
console.log('Replaced renderIntroduction and renderAboutCamp with clean texts');
