#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–∫–æ–≤
"""
import json

def check_badge_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–∫–æ–≤"""
    with open('perfect_parsed_data.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    print(f"üìä –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(data['categories'])}")
    print(f"üìä –í—Å–µ–≥–æ –∑–Ω–∞—á–∫–æ–≤: {len(data['badges'])}")
    
    # –ò—â–µ–º –∑–Ω–∞—á–æ–∫ –í–∞–ª—é—à–∞
    found = False
    for badge in data['badges']:
        if '–≤–∞–ª—é—à–∞' in badge['title'].lower():
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω –∑–Ω–∞—á–æ–∫: {badge['title']}")
            print(f"ID: {badge['id']}")
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {badge['description']}")
            print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {badge['category_id']}")
            found = True
            break
    
    if not found:
        print("\n‚ùå –ó–Ω–∞—á–æ–∫ –í–∞–ª—é—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("–ü–µ—Ä–≤—ã–µ 10 –∑–Ω–∞—á–∫–æ–≤:")
        for i, badge in enumerate(data['badges'][:10]):
            print(f"{i+1}. {badge['title']} (ID: {badge['id']})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é 1 (–ó–∞ –ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è)
    print(f"\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è 1:")
    for badge in data['badges']:
        if badge['category_id'] == '1':
            print(f"- {badge['title']} (ID: {badge['id']})")

if __name__ == "__main__":
    check_badge_data()
