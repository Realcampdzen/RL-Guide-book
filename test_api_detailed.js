// –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
async function testAPIDetailed() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø–æ–¥—Ä–æ–±–Ω–æ...\n');

  const tests = [
    {
      name: '–ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
      message: '–ü—Ä–∏–≤–µ—Ç',
      context: {}
    },
    {
      name: '–í–æ–ø—Ä–æ—Å –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
      message: '–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ë—Ä–æ-–∑–Ω–∞—á–∫–∏',
      context: {
        current_view: 'category',
        current_category: { id: 'bro-znachki', title: '–ë—Ä–æ-–∑–Ω–∞—á–∫–∏' }
      }
    },
    {
      name: '–ö—Ç–æ —Ç—ã?',
      message: '–ö—Ç–æ —Ç—ã?',
      context: {}
    }
  ];

  for (const test of tests) {
    console.log(`\nüìã –¢–µ—Å—Ç: ${test.name}`);
    console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: "${test.message}"`);
    console.log(`üéØ –ö–æ–Ω—Ç–µ–∫—Å—Ç:`, JSON.stringify(test.context, null, 2));

    try {
      const response = await fetch('https://backend-fq5f9bm5c-nomorningst-2550s-projects.vercel.app/api/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          message: test.message,
          user_id: 'test_user_' + Date.now(),
          context: test.context
        })
      });

      const data = await response.json();
      
      if (response.ok) {
        console.log('‚úÖ –£—Å–ø–µ—Ö!');
        console.log('ü§ñ –û—Ç–≤–µ—Ç –±–æ—Ç–∞:', data.response);
        console.log(`üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: ${data.response.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
        if (data.response.includes('–ù–µ–π—Ä–æ–í–∞–ª—é—à–∞') || data.response.includes('–í–∞–ª—é—à–∞')) {
          console.log('‚úÖ –ë–æ—Ç –∑–Ω–∞–µ—Ç —Å–≤–æ–µ –∏–º—è');
        } else {
          console.log('‚ö†Ô∏è –ë–æ—Ç –Ω–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç —Å–≤–æ–µ –∏–º—è');
        }

        if (data.response.includes('–†–µ–∞–ª—å–Ω—ã–π –õ–∞–≥–µ—Ä—å') || data.response.includes('–ª–∞–≥–µ—Ä')) {
          console.log('‚úÖ –ë–æ—Ç –∑–Ω–∞–µ—Ç –æ –ª–∞–≥–µ—Ä–µ');
        } else {
          console.log('‚ö†Ô∏è –ë–æ—Ç –Ω–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç –ª–∞–≥–µ—Ä—å');
        }

        if (test.name === '–í–æ–ø—Ä–æ—Å –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' && data.response.includes('–ë—Ä–æ')) {
          console.log('‚úÖ –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
        } else if (test.name === '–í–æ–ø—Ä–æ—Å –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏') {
          console.log('‚ùå –ë–æ—Ç –ù–ï –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
        }
        
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ API:', data.error || data.message);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error.message);
    }
    
    console.log('‚îÄ'.repeat(50));
  }
}

testAPIDetailed();
