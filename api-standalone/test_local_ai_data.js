// –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ data_loader_ai_data.js
import { DataLoaderAIData } from './data_loader_ai_data.js';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π data_loader_ai_data.js...\n');

try {
  const dataLoader = new DataLoaderAIData();
  console.log('‚úÖ DataLoaderAIData —Å–æ–∑–¥–∞–Ω');
  
  const data = dataLoader.loadAllData();
  console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
    categories: data.totalCategories,
    badges: data.totalBadges,
    levels: data.totalLevels
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = dataLoader.getAllCategories();
  console.log('\nüìã –ü–µ—Ä–≤—ã–µ 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:');
  categories.slice(0, 3).forEach(category => {
    console.log(`- ${category.emoji} ${category.title} (${category.badge_count} –∑–Ω–∞—á–∫–æ–≤)`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–Ω–∞—á–æ–∫
  const valushaBadge = dataLoader.getBadge('1.1');
  if (valushaBadge) {
    console.log(`\n‚úÖ –ó–Ω–∞—á–æ–∫ "–í–∞–ª—é—à–∞" –Ω–∞–π–¥–µ–Ω:`, {
      id: valushaBadge.id,
      title: valushaBadge.title,
      emoji: valushaBadge.emoji,
      category: valushaBadge.category_title
    });
  } else {
    console.log('\n‚ùå –ó–Ω–∞—á–æ–∫ "–í–∞–ª—é—à–∞" –ù–ï –Ω–∞–π–¥–µ–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–ó–∞ –ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"
  const personalCategory = dataLoader.getCategory('1');
  if (personalCategory) {
    console.log(`\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–ó–∞ –ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è" –Ω–∞–π–¥–µ–Ω–∞:`, {
      id: personalCategory.id,
      title: personalCategory.title,
      badges: personalCategory.badges.length
    });
  } else {
    console.log('\n‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è "–ó–∞ –ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è" –ù–ï –Ω–∞–π–¥–µ–Ω–∞');
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  console.error('Stack:', error.stack);
}
