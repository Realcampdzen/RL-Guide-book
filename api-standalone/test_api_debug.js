// –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
async function testAPIDebug() {
  console.log('üß™ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...\n');

  try {
    const response = await fetch('https://backend-fq5f9bm5c-nomorningst-2550s-projects.vercel.app/api/chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        message: '–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å: –ø–æ–∫–∞–∂–∏ —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–µ—Ä–≤—ã–µ 3 –Ω–∞–∑–≤–∞–Ω–∏—è',
        user_id: 'debug_test_' + Date.now(),
        context: {}
      })
    });

    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç');
      console.log('ü§ñ –û—Ç–≤–µ—Ç:', data.response);
      console.log(`üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: ${data.response.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      
      // –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞
      const numberMatches = data.response.match(/(\d+)\s*–∫–∞—Ç–µ–≥–æ—Ä–∏/gi);
      if (numberMatches) {
        console.log('üî¢ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', numberMatches);
      }
      
      // –ò—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      const correctCategories = [
        '–ó–∞ –ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
        '–ó–∞ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –¥–µ–ª–∞',
        '–ú–µ–¥–∏–∞ –∑–Ω–∞—á–∫–∏',
        '–ë—Ä–æ-–∑–Ω–∞—á–∫–∏',
        '–ó–Ω–∞—á–∫–∏ –î–≤–∏–∂–∫–æ–≤'
      ];
      
      console.log('\nüìã –ü–æ–∏—Å–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:');
      correctCategories.forEach(category => {
        const found = data.response.includes(category);
        console.log(`${found ? '‚úÖ' : '‚ùå'} ${category}: ${found ? '–Ω–∞–π–¥–µ–Ω–æ' : '–ù–ï –Ω–∞–π–¥–µ–Ω–æ'}`);
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è ai-data –≤ –æ—Ç–≤–µ—Ç–µ
      if (data.response.includes('ai-data') || data.response.includes('MASTER_INDEX')) {
        console.log('‚úÖ –ï—Å—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è ai-data');
      } else {
        console.log('‚ùå –ù–ï–¢ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π ai-data');
      }
      
    } else {
      console.log('‚ùå API –æ—à–∏–±–∫–∞:', data.error || data.message);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error.message);
  }

  console.log('\n' + '='.repeat(50));
  
  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∑–Ω–∞—á–æ–∫
  try {
    console.log('\nüß™ –¢–µ—Å—Ç 2 - –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–∫–∞...');
    
    const response2 = await fetch('https://backend-fq5f9bm5c-nomorningst-2550s-projects.vercel.app/api/chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        message: '–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –∑–Ω–∞—á–æ–∫ "–í–∞–ª—é—à–∞"',
        user_id: 'debug_valusha_' + Date.now(),
        context: {}
      })
    });

    const data2 = await response2.json();
    
    if (response2.ok) {
      console.log('ü§ñ –û—Ç–≤–µ—Ç –ø—Ä–æ –í–∞–ª—é—à—É:', data2.response);
      
      if (data2.response.includes('–í–∞–ª—é—à–∞') && data2.response.includes('–ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è')) {
        console.log('‚úÖ –ó–Ω–∞—á–æ–∫ "–í–∞–ª—é—à–∞" –Ω–∞–π–¥–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
      } else {
        console.log('‚ùå –ó–Ω–∞—á–æ–∫ "–í–∞–ª—é—à–∞" –ù–ï –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø–∏—Å–∞–Ω');
      }
    } else {
      console.log('‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ—à–µ–ª:', data2.error);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ 2:', error.message);
  }
}

testAPIDebug();
